library(shiny); runApp('sunburst_shiny_add_click.R')
??strsplit
library(plyr)
runApp('sunburst_shiny_add_click.R')
runApp('sunburst_shiny_add_click.R')
install.packages("htmlwidgets")
install.packages("htmlwidgets")
library(shiny); runApp('sunburst_shiny_add_click.R')
runApp('sunburst_shiny_add_click.R')
library(sunburstR)
library(shiny); runApp('sunburst_shiny_add_click.R')
library(shiny); runApp('sunburst_lettuce.R')
runApp('sunburst_lettuce.R')
library(shiny); runApp('sunburst_lettuce.R')
library(shiny); runApp('sunburst_lettuce.R')
runApp('sunburst_shiny.R')
library(shiny); runApp('sunburst_shiny.R')
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(xlsx)
library(reshape)
library(reshape2)
library(ggplot2)
library(plotly)
runApp('C:/_sandbox/OAA/Workproduct/code/uteByMonth/app_new.R')
install.packages("plotly")
runApp('C:/_sandbox/OAA/Workproduct/code/uteByMonth/app_new.R')
library(shiny); runApp('sunburst_shiny.R')
runApp('sunburst_shiny.R')
library(shiny); runApp('sunburst_shiny.R')
runApp('sunburst_shiny.R')
source('C:/_gitHub/CTDasRDF/r/query/Stardog-PathQuery.R', echo=TRUE)
runApp('sunburst_shiny.R')
# FILE: XPTtoCSV.R
# DESC: Convert XPT domain file to CSV
# SRC :
# IN  :
# OUT :
# REQ :
# SRC :
# NOTE: Some imputed values to match ontology development requirements.
# TODO:
###############################################################################
library(Hmisc)
dm_n=3;  # The first n patients from the DM domain.
# Subsetting to allow incremental dev
pntSubset<-c('01-701-1015') # List of usubjid's to process.
# Set working directory to the root of the work area
setwd("C:/_github/CTDasRDF")
readXPT<-function(domain)
{
sourceFile <- paste0("data/source/", domain, ".XPT")
result <- sasxport.get(sourceFile)
result  # return the dataframe
}
# VS ----
vs  <- readXPT("vs")  # first row only for initial testing.
# Subset for development
vs[vs$vsseq %in% c(1,2,3,43,86,87,88,128,142) & vs$usubjid==pntSubset,  ]
# Subset for development
vs<-vs[vs$vsseq %in% c(1,2,3,43,86,87,88,128,142) & vs$usubjid==pntSubset,  ]
write.csv(vs, file="data/source/vs_subset.csv",
row.names = F)
# VS ----
vs  <- readXPT("vs")  # first row only for initial testing.
# Subset for development
# vs<-vs[vs$vsseq %in% c(1,2,3,43,86,87,88,128,142) & vs$usubjid==pntSubset,  ]
vs<-vs[vs$usubjid==pntSubset,  ]
write.csv(vs, file="data/source/vs_subset.csv",
row.names = F)
# VS ----
vs  <- readXPT("vs")  # first row only for initial testing.
# Subset for development
# vs<-vs[vs$vsseq %in% c(1,2,3,43,86,87,88,128,142) & vs$usubjid==pntSubset,  ]
vs<-vs[vs$visit %in% c("BASELINE","SCREENING 1","WEEK 2","WEEK 24") & vs$usubjid==pntSubset,  ]
write.csv(vs, file="data/source/vs_subset.csv",
row.names = F)
source('C:/_gitHub/CTDasRDF/r/query/Stardog-PathQuery.R', echo=TRUE)
runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-Shiny.R')
