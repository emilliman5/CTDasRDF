rootNodeDer <- "Person_v29eedorsh9a5vr65uc1iob3mvn9blbb"
# Form the queries ----
queryDer = paste("
SELECT ?s ?p ?o
WHERE
{ ", rootNodeDer,"   ?p ?o
BIND ( ", rootNodeDer, " AS ?s)
}ORDER BY ?o"
)
queryDer
runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-Shiny.R')
###############################################################################
# FILE: CollapsibleTree-Shiny.R
# DESC: Collapsible node tree to compare ontology and derived nodes
# SRC :
# IN  :
# OUT :
# REQ :
# SRC :
# NOTE: Early dev with bogus data
#       Notes on Shiny bindings
#       https://www.rdocumentation.org/packages/collapsibleTree/versions/0.1.5/topics/collapsibleTree-shiny
# TODO:
###############################################################################
library(SPARQL)
library(shiny)
library(collapsibleTree)
library(DT)
# Endpoints
epDer = "http://localhost:5820/CTDasRDF/query"
epOnt = "http://localhost:5820/CTDasRDFOnt/query"
# Define the namespaces
namespaces <- c('cd01p', '<https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/cdiscpilot01-protocol.ttl#>',
'cdiscpilot01', '<https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/cdiscpilot01.ttl#>',
'code', '<https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/code.ttl#>',
'custom', '<https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/custom#>',
'sdtmterm', '<http://rdf.cdisc.org/sdtmterm#>',
'skos', '<http://www.w3.org/2004/02/skos/core#>',
'study', '<https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/study.ttl#>',
'time', '<http://www.w3.org/2006/time#>',
'rdf', '<http://www.w3.org/1999/02/22-rdf-syntax-ns#>',
'rdfs', '<http://www.w3.org/2000/01/rdf-schema#>',
'xsd', '<http://www.w3.org/2001/XMLSchema#>'
)
rootNodeDer <- "Person_v29eedorsh9a5vr65uc1iob3mvn9blbb"
# Form the queries ----
queryDer = paste0("SELECT ?s ?p ?o
WHERE{", rootNodeDer," ?p ?o
BIND(\"", rootNodeDer, "\" AS ?s)
} ORDER BY ?o")
queryDer
runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-Shiny.R')
queryOnt = '
PREFIX cdiscpilot01: <https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/cdiscpilot01.ttl#>
SELECT ?s ?p ?o
WHERE
{
cdiscpilot01:Person_1 ?p ?o .
BIND ("cdiscpilot01:Person_1" AS ?s)
} ORDER BY ?o'
queryOnt
queryDer
runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-Shiny.R')
###############################################################################
# FILE: CollapsibleTree-Shiny.R
# DESC: Collapsible node tree to compare ontology and derived nodes
# SRC :
# IN  :
# OUT :
# REQ :
# SRC :
# NOTE: Early dev with bogus data
#       Notes on Shiny bindings
#       https://www.rdocumentation.org/packages/collapsibleTree/versions/0.1.5/topics/collapsibleTree-shiny
# TODO:
###############################################################################
library(SPARQL)
library(shiny)
library(collapsibleTree)
library(DT)
# Endpoints
epDer = "http://localhost:5820/CTDasRDF/query"
epOnt = "http://localhost:5820/CTDasRDFOnt/query"
# Define the namespaces
namespaces <- c('cd01p', '<https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/cdiscpilot01-protocol.ttl#>',
'cdiscpilot01', '<https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/cdiscpilot01.ttl#>',
'code', '<https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/code.ttl#>',
'custom', '<https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/custom#>',
'sdtmterm', '<http://rdf.cdisc.org/sdtmterm#>',
'skos', '<http://www.w3.org/2004/02/skos/core#>',
'study', '<https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/study.ttl#>',
'time', '<http://www.w3.org/2006/time#>',
'rdf', '<http://www.w3.org/1999/02/22-rdf-syntax-ns#>',
'rdfs', '<http://www.w3.org/2000/01/rdf-schema#>',
'xsd', '<http://www.w3.org/2001/XMLSchema#>'
)
rootNodeDer <- "Person_v29eedorsh9a5vr65uc1iob3mvn9blbb"
# Form the queries ----
queryDer = paste0("
PREFIX cdiscpilot01: <https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/cdiscpilot01.ttl#>
SELECT ?s ?p ?o
WHERE{", rootNodeDer," ?p ?o
BIND(\"",rootNodeDer,"\" AS ?s)
} ORDER BY ?o")
queryDer
runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-Shiny.R')
trace(utils:::unpackPkgZip, edit=TRUE)
install.packages("datapack")
tempdir()
source('~/.active-rstudio-document', echo=TRUE)
View(dp)
View(dp)
head(dp)
head(do)
library(shiny); runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-Shiny.R')
source('C:/_sandbox/SemanticWeb/UCB/MacroTracker/RBM/data/TTL/Stardog-PathQuery.R', echo=TRUE)
###############################################################################
# FILE: Stardog-PathQuery.R
# DESC: Developing the Stardog path query functionality for later use in
#         RShiny app.
# SRC :
# IN  : triplestore database CTDasRDFOnt
# OUT :
# REQ : Stardog running: 1. on port  5820
#       2. with --disable-security option during start
# SRC :
# NOTE:
# TODO: Adjust code for use in a new version of CollapsibeTree-Shiny.R to use
#       paths instead of SPARQL.
###############################################################################
library(SPARQL)
library(collapsibleTree)
# Query StardogTriple Store ----
endpoint <- "http://localhost:5820/seq/query"
queryOnt = paste0("
PREFIX eg: <http://www.example.org/myproject#>
PATHS START ?s = eg:Thing1
END ?o
VIA ?p
")
qd <- SPARQL(endpoint, queryOnt)
triplesDF <- qd$results
View(triplesDF)
View(triplesDF)
# Post query processing
triplesDF <- triplesDF[complete.cases(triplesDF), ]  # remove blank rows.
triplesDF <- triplesDF[, c("s", "p", "o")]   # remove o.l, s.l
###############################################################################
# FILE: Stardog-PathQuery.R
# DESC: Developing the Stardog path query functionality for later use in
#         RShiny app.
# SRC :
# IN  : triplestore database CTDasRDFOnt
# OUT :
# REQ : Stardog running: 1. on port  5820
#       2. with --disable-security option during start
# SRC :
# NOTE:
# TODO: Adjust code for use in a new version of CollapsibeTree-Shiny.R to use
#       paths instead of SPARQL.
###############################################################################
library(SPARQL)
library(collapsibleTree)
# Query StardogTriple Store ----
endpoint <- "http://localhost:5820/seq/query"
queryOnt = paste0("
PREFIX eg: <http://www.example.org/myproject#>
PATHS START ?s = eg:Thing1
END ?o
VIA ?p
")
qd <- SPARQL(endpoint, queryOnt)
triplesDF <- qd$results
# Post query processing
triplesDF <- triplesDF[complete.cases(triplesDF), ]  # remove blank rows.
triplesDF <- triplesDF[, c("s", "p", "o")]   # remove o.l, s.l
triplesDF <- unique(triplesDF)  # Remove dupes
###############################################################################
# FILE: Stardog-PathQuery.R
# DESC: Developing the Stardog path query functionality for later use in
#         RShiny app.
# SRC :
# IN  : triplestore database CTDasRDFOnt
# OUT :
# REQ : Stardog running: 1. on port  5820
#       2. with --disable-security option during start
# SRC :
# NOTE:
# TODO: Adjust code for use in a new version of CollapsibeTree-Shiny.R to use
#       paths instead of SPARQL.
###############################################################################
library(SPARQL)
library(collapsibleTree)
# Query StardogTriple Store ----
endpoint <- "http://localhost:5820/seq/query"
queryOnt = paste0("
PREFIX eg: <http://www.example.org/myproject#>
PATHS START ?s = eg:Thing1
END ?o
VIA ?p
")
qd <- SPARQL(endpoint, queryOnt)
triplesDF <- qd$results
# Post query processing
triplesDF <- triplesDF[complete.cases(triplesDF), ]  # remove blank rows.
triplesDF <- triplesDF[, c("s", "p", "o")]   # remove o.l, s.l
triplesDF <- unique(triplesDF)  # Remove dupes
source('C:/_sandbox/SemanticWeb/UCB/MacroTracker/RBM/data/TTL/Stardog-PathQuery.R', echo=TRUE)
source('C:/_sandbox/Applications/stardog/SPARQL/Stardog-PathQuery.R', echo=TRUE)
source('C:/_sandbox/Applications/stardog/SPARQL/Stardog-PathQuery.R', echo=TRUE)
source('C:/_sandbox/Applications/stardog/SPARQL/Stardog-PathQuery.R', echo=TRUE)
###############################################################################
# FILE: Stardog-PathQuery.R
# DESC: Developing the Stardog path query functionality for later use in
#         RShiny app.
# SRC :
# IN  : triplestore database CTDasRDFOnt
# OUT :
# REQ : Stardog running: 1. on port  5820
#       2. with --disable-security option during start
# SRC :
# NOTE:
# TODO: Adjust code for use in a new version of CollapsibeTree-Shiny.R to use
#       paths instead of SPARQL.
###############################################################################
library(SPARQL)
library(collapsibleTree)
# Query StardogTriple Store ----
endpoint <- "http://localhost:5820/seq/query"
#queryOnt = paste0("
#  PREFIX eg: <http://www.example.org/myproject#>
#  PATHS START ?s = eg:Thing1
#  END ?o
#  VIA ?p
#")
queryOnt = paste0("
PREFIX eg: <http://www.example.org/myproject#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
paths start ?s = eg:Thing1
end ?o { ?o rdf:type ?oType } via eg:andThen
")
qd <- SPARQL(endpoint, queryOnt)
triplesDF <- qd$results
View(triplesDF)
source('C:/_sandbox/Applications/stardog/SPARQL/Stardog-PathQuery.R', echo=TRUE)
source('C:/_sandbox/Applications/stardog/SPARQL/Stardog-PathQuery.R', echo=TRUE)
source('C:/_sandbox/Applications/stardog/SPARQL/Stardog-PathQuery.R', echo=TRUE)
library(shiny); runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-PathQuery-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-PathQuery-Shiny.R')
library(shiny); runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-PathQuery-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
install.packages("reshape")
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
library(shiny); runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
library(shiny); runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
library(utils)
foo <- "https://www.example.org/foobar#2015-4-03T11:10AM"
URLencode(foo)
foo <- "https://www.example.org/foobar#2015-4-03 T11:10AM"
URLencode(foo)
library(devtools)
devtools::install_github('nstrayer/nework3d')
devtools::install_github('nstrayer/network3d')
# SRC :
# IN  :
# OUT :
# REQ :
# NOTE:
# INSTALL:
#   library(devtools)
#   devtools::install_github('nstrayer/network3d')
# TODO:
###############################################################################
library(network3d)
data <- collaboration_networks # comes from the package
View(data)
View(data)
data$edges %>% head() %>% knitr::kable()
library(dplyr)
data$edges %>% head() %>% knitr::kable()
network3d(data$vertices, data$edges)
data$vertices %>% head() %>% knitr::kable()
data$edges %>% head() %>% knitr::kable()
network3d(data$vertices, data$edges)
data$vertices <- data$vertices %>%
mutate(
color = 'steelblue',
name = paste('node', name)
)
network3d(data$vertices, data$edges)
install.packages('htmlwidgets')
install.packages("htmlwidgets")
trace(utils:::unpackPkgZip, edit=TRUE)
install.packages("htmlwidgets")
install.packages("htmlwidgets")
trace(utils:::unpackPkgZip, edit=TRUE)
install.packages("htmlwidgets")
# SRC :
# IN  :
# OUT :
# REQ :
# NOTE:
# INSTALL:
#   library(devtools)
#   devtools::install_github('nstrayer/network3d')
# TODO:
###############################################################################
library(network3d)
library(dplyr)
data <- collaboration_networks # comes from the package
data$vertices %>% head() %>% knitr::kable()
data$edges %>% head() %>% knitr::kable()
# Basic plot.  PROBLEM : No display ?
network3d(data$vertices, data$edges)
library(htmlwidgets)
# Basic plot.  PROBLEM : No display ?
network3d(data$vertices, data$edges)
source('C:/_sandbox/Applications/r/CodeEg/Visualization/3DNetwork/3DNetworkEg.R', echo=TRUE)
getOption(broswer)
getOption("browser")
# Plot 3: Add force explorer
network3d(
data$vertices, data$edges,
node_size = 0.05,
edge_opacity = 0.25,
force_explorer = TRUE)
data$vertices <- data$vertices %>%
mutate(
color =  RColorBrewer::brewer.pal(12, name = 'Paired') %>% sample(size = n(), replace = TRUE),
size = runif(n(), min = 0.01, max = 0.1)
)
network3d(data$vertices, data$edges,
max_iterations = 100,
manybody_strength = 0.5,
background_color = 'black',
edge_opacity = 0.15)
network3d(data$vertices, data$edges,
max_iterations = 100,
manybody_strength = 0.5,
background_color = "#002b36",
edge_opacity = 0.15)
# OUT : View in Google Chrome. Will not show up in RStudio viewer.Set your OS
#       default browser to chrome following instructions:
#         https://support.google.com/chrome/answer/95417?co=GENIE.Platform%3DDesktop&hl=en
# REQ :
# NOTE:  Node size and color set within the dataframe.
# INSTALL: Package is not in CRAN.
#   library(devtools)
#   devtools::install_github('nstrayer/network3d')
# TODO:
###############################################################################
library(network3d)
library(tidyverse)
source('C:/_sandbox/OAA/LinkedData/RBMProgramFlow/r/vis/3DNetworkExampleCode.R', echo=TRUE)
library(shiny); runApp('C:/_gitHub/CTDasRDF/r/validation/CollapsibleTree-PathQuery-Shiny.R')
source('C:/_gitHub/CTDasRDF/r/validation/testEncoding_query.R', echo=TRUE)
query
?sprintf
source('C:/_gitHub/CTDasRDF/r/validation/testEncoding_query.R', echo=TRUE)
# FILE:  testEncoding.R
# DESC:  Test URL Encoding
# SRC :
# IN  :
# OUT :
# REQ :
# SRC :
# NOTE: test:Ethnic_HISPANIC\%20OR\%20LATINO ?p ?o .
# TODO:
###############################################################################
library(SPARQL)
ep = "http://localhost:5820/CTDasRDF/query"
# Query results dfs ----
qr <- SPARQL(url=ep, query='
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(shiny); runApp('C:/_sandbox/OAA/TreatFlow/R/sunburst_shiny.R')
runApp('C:/_sandbox/OAA/TreatFlow/R/sunburst_shiny.R')
library(shiny); runApp('C:/_sandbox/OAA/TreatFlow/R/sunburst_shiny.R')
runApp('C:/_sandbox/OAA/TreatFlow/R/sunburst_shiny.R')
runApp('C:/_sandbox/OAA/TreatFlow/R/sunburst_shiny.R')
library(shiny); runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
library(shiny); runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
library(shiny); runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
source('C:/_gitHub/CTDasRDF/r/validation/FullTripleComp-Stardog.R', echo=TRUE)
runApp('validation/CompTriples-Stardog-Shiny.R')
runApp('validation/CollapsibleTree-PathQuery-Shiny.R')
source('C:/_gitHub/CTDasRDF/r/XPTtoCSV.R', echo=TRUE)
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
source('C:/_gitHub/CTDasRDF/r/XPTtoCSV.R', echo=TRUE)
runApp('C:/_gitHub/CTDasRDF/r/validation/CompTriples-Stardog-Shiny.R')
source('C:/_gitHub/CTDasRDF/r/validation/FullTripleComp-Stardog.R', echo=TRUE)
###############################################################################
# FILE: fullTripleComp-Stardog.R
# DESC: Compare all Ontology instance triples graph (CTDasRDFOnt) with those
#         created by SMS Mapping (CTDasRDF) graph.
# SRC : Based on code fullTriplesComp.R from comparing TTL files.
# IN  : Stardog graphs: CTDasRDFOnt, CTDasRDF
# OUT : datatable
# REQ : Stardog running, graph populated.
# NOTE:
# TODO: Add "exceptions" dataframe to remove artifacts from either source in the
#        in the comparison.
###############################################################################
library(plyr)    #  rename
library(dplyr)   # anti_join. MUst load dplyr AFTER plyr!!
library(reshape) #  melt
library(SPARQL)
library(DT)
setwd("C:/_gitHub/CTDasRDF/r")
source("validation/Functions.R")
# Endpoints
epOnt = "http://localhost:5820/CTDasRDFOnt/query"
epSMS = "http://localhost:5820/CTDasRDF/query"
## May need this again later.
## Subjects in Ontology for testing that are not in the R conversion (yet)
##   these will be deleted from the ontology dataframe prior to comparison
## Source of cd01p:StartRuleNone is unknown. Not in cdiscpilot01.ttl
## Some of hasEntity is in the file...but why?
## study:HumanStudySubject  - several triples appear due to inferencing, due to:
##  <https://github.com/phuse-org/CTDasRDF/tree/master/data/rdf/sdtm#hasEntity>
##  rdfs:range study:HumanStudySubject ;
##
## cdiscpilot01:UnscheduledVisit_1  - will be present later when patient 01-716-1026 is processed
##       AO email 15Sep17
#removeSubjects <- c("cdiscpilot01:Site_2", "cdiscpilot01:Site_3","cdiscpilot01:Site_4",
#  "cdiscpilot01:Site_5","cdiscpilot01:Site_6","cdiscpilot01:Site_7","cdiscpilot01:Site_8",
#  "cdiscpilot01:Site_9","cdiscpilot01:Site_10","cdiscpilot01:Site_11","cdiscpilot01:Site_12",
#  "cdiscpilot01:Site_13","cdiscpilot01:Site_14","cdiscpilot01:Site_15","cdiscpilot01:Site_16",
#  "https://github.com/phuse-org/CTDasRDF/tree/master/data/rdf/sdtm#hasEntity",
#  "study:HumanStudySubject",
#  "study:UnscheduledVisit",
#  "cdiscpilot01:UnscheduledVisit_1"
#  )
# No longer omitting:
#   "cd01p:StartRuleNone",
# "study:HumanStudySubject",
# Read in the prefixes
prefixList <- read.csv(file="prefixList.csv", header=TRUE, sep=",")
# Create a combined prefix IRI column.
prefixList$prefix_ <- paste0("PREFIX ",prefixList$prefix, " ", prefixList$iri)
# Collapse into a single string
prefixBlock <- paste(prefixList$prefix_, collapse = "\n")
# All s,p,o from both files.
query = paste0(paste(prefixBlock, collapse=""),
"SELECT ?s ?p ?o
WHERE {?s ?p ?o .}
ORDER BY ?s ?p ?o")
#---- Ontology Triples---------------------------------------------------------
qrOnt <- SPARQL(url=epOnt, query=query)
triplesOnt <- qrOnt$results
View(triplesOnt)
View(triplesOnt)
triplesOnt <- triplesOnt[ ! triplesOnt$s =='<https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/cdiscpilot01.ttl>' ]
triplesOnt <- triplesOnt[ !(triplesOnt$s =='<https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/cdiscpilot01.ttl>'), ]
source('C:/_gitHub/CTDasRDF/r/validation/FullTripleComp-Stardog.R', echo=TRUE)
source('C:/_gitHub/CTDasRDF/r/XPTtoCSV.R', echo=TRUE)
source('C:/_gitHub/CTDasRDF/r/XPTtoCSV.R', echo=TRUE)
