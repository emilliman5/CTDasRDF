# baseURI: https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/sdtm.ttl
# imports: http://rdf.cdisc.org/std/sdtm-1-3
# imports: http://rdf.cdisc.org/std/sdtmig-3-1-3
# imports: http://spinrdf.org/spl
# imports: http://www.w3.org/2004/02/skos/core
# imports: https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/code.ttl
# imports: https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/study.ttl

@prefix arg: <http://spinrdf.org/arg#> .
@prefix cdiscs: <http://rdf.cdisc.org/std/schema#> .
@prefix code: <https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/code.ttl#> .
@prefix mms: <http://rdf.cdisc.org/mms#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sdtm: <https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/sdtm.ttl#> .
@prefix sdtmig-3-1-3: <http://rdf.cdisc.org/std/sdtmig-3-1-3#> .
@prefix sdtmterm: <http://rdf.cdisc.org/sdtmterm#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix study: <https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/study.ttl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.ACTARM>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat study:Arm ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.ACTARMCD>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat study:Arm ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.AGE>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.AGEU>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat sdtmterm:C66781 ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.ARM>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat study:Arm ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.ARMCD>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat study:Arm ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.BRTHDTC>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat code:ISO8601 ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.COUNTRY>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat code:Country ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.DMDTC>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat code:ISO8601 ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.DMDY>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.DOMAIN>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.DTHDTC>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat code:ISO8601 ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.DTHFL>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat sdtmterm:C66742 ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.ETHNIC>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat sdtmterm:C66790 ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.INVID>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.INVNAM>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.RACE>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat sdtmterm:C74457 ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.RFENDTC>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat code:ISO8601 ;
  code:hasMethod code:ActivityMethod_2 ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.RFICDTC>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat code:ISO8601 ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.RFPENDTC>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat code:ISO8601 ;
  code:hasMethod code:ActivityMethod_2 ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.RFSTDTC>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat code:ISO8601 ;
  code:hasMethod code:ActivityMethod_2 ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.RFXENDTC>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat code:ISO8601 ;
  code:hasMethod code:ActivityMethod_2 ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.RFXSTDTC>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat code:ISO8601 ;
  code:hasMethod code:ActivityMethod_2 ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.SEX>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat sdtmterm:C66731 ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.SITEID>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.STUDYID>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.SUBJID>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.USUBJID>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.SUPPQUAL.IDVAR>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.SUPPQUAL.IDVARVAL>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.SUPPQUAL.QEVAL>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.SUPPQUAL.QLABEL>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.SUPPQUAL.QNAM>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.SUPPQUAL.QORIG>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.SUPPQUAL.QVAL>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.SUPPQUAL.RDOMAIN>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.SUPPQUAL.STUDYID>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.SUPPQUAL.USUBJID>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.DOMAIN>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.STUDYID>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.USUBJID>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VISIT>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VISITDY>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VISITNUM>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSBLFL>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSCAT>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSDRVFL>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSDTC>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSDY>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSELTM>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSGRPID>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSLOC>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSORRES>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSORRESU>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSPOS>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSREASND>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSRFTDTC>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSSCAT>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSSEQ>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSSPID>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSSTAT>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSSTRESC>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSSTRESN>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSSTRESU>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSTEST>
  rdf:type sdtm:Variable ;
  cdiscs:controlledTermsOrFormat sdtmterm:C67153 ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSTESTCD>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSTPT>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSTPTNUM>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.VS.VSTPTREF>
  rdf:type sdtm:Variable ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Dataset.DM>
  rdf:type sdtm:Domain ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Dataset.EX>
  rdf:type sdtm:Domain ;
.
<http://rdf.cdisc.org/std/sdtmig-3-1-3#Dataset.VS>
  rdf:type sdtm:Domain ;
.
<https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/sdtm.ttl>
  rdf:type owl:Ontology ;
  owl:imports <http://rdf.cdisc.org/std/sdtm-1-3> ;
  owl:imports <http://rdf.cdisc.org/std/sdtmig-3-1-3> ;
  owl:imports <http://spinrdf.org/spl> ;
  owl:imports <http://www.w3.org/2004/02/skos/core> ;
  owl:imports <https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/code.ttl> ;
  owl:imports <https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/study.ttl> ;
  owl:versionInfo "Created with TopBraid Composer"^^xsd:string ;
.
<https://raw.githubusercontent.com/phuse-org/CTDasRDF/master/data/rdf/sdtm.ttl#Dataset.SUPPDM>
  rdf:type sdtm:Domain ;
  skos:prefLabel "SUPPDM" ;
.
sdtm:DefineComponent
  rdf:type owl:Class ;
  rdfs:label "Define component"^^xsd:string ;
.
sdtm:DefineTerminology
  rdf:type owl:Class ;
  rdfs:label "Define terminology"^^xsd:string ;
  rdfs:subClassOf sdtm:DefineComponent ;
.
sdtm:Domain
  rdf:type owl:Class ;
  rdfs:comment ""^^xsd:string ;
  rdfs:subClassOf sdtm:SDTMTerminology ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "Domain"^^xsd:string ;
.
sdtm:SDTMComponent
  rdf:type owl:Class ;
  rdfs:comment ""^^xsd:string ;
  rdfs:subClassOf owl:Thing ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "SDTMComponent"^^xsd:string ;
.
sdtm:SDTMDefineDomain
  rdf:type owl:Class ;
  spin:query [
      rdf:type sp:Select ;
      sp:orderBy (
          [
            rdf:type sp:Asc ;
            sp:expression [
                sp:varName "num"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:resultVariables (
          [
            sp:varName "Variable"^^xsd:string ;
          ]
          [
            sp:varName "Label"^^xsd:string ;
          ]
          [
            sp:varName "Type"^^xsd:string ;
          ]
          [
            sp:varName "Controlled_Terminology"^^xsd:string ;
          ]
          [
            sp:varName "Origin"^^xsd:string ;
          ]
          [
            sp:varName "Role"^^xsd:string ;
          ]
          [
            sp:varName "Comment"^^xsd:string ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMDefineRecord_DM ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "var"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFVariable ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "num"^^xsd:string ;
              ] ;
            sp:predicate mms:ordinal ;
            sp:subject [
                sp:varName "var"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "Variable"^^xsd:string ;
              ] ;
            sp:predicate mms:dataElementName ;
            sp:subject [
                sp:varName "var"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "Label"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFLabel ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "Type"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFType ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "Controlled_Terminology"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasDFControlledTerm ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "Origin"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFOrigin ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "Role"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFRole ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "Comment"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasDFComment ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "generates a tabular display of define.xml content for DM"^^xsd:string ;
    ] ;
  spin:query [
      rdf:type sp:Select ;
      sp:orderBy (
          [
            rdf:type sp:Asc ;
            sp:expression [
                sp:varName "num"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:resultVariables (
          [
            sp:varName "Variable"^^xsd:string ;
          ]
          [
            sp:varName "Label"^^xsd:string ;
          ]
          [
            sp:varName "Type"^^xsd:string ;
          ]
          [
            sp:varName "Controlled_Terminology"^^xsd:string ;
          ]
          [
            sp:varName "Origin"^^xsd:string ;
          ]
          [
            sp:varName "Role"^^xsd:string ;
          ]
          [
            sp:varName "Comment"^^xsd:string ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMDefineRecord_VS ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "var"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFVariable ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "num"^^xsd:string ;
              ] ;
            sp:predicate mms:ordinal ;
            sp:subject [
                sp:varName "var"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "Variable"^^xsd:string ;
              ] ;
            sp:predicate mms:dataElementName ;
            sp:subject [
                sp:varName "var"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "Label"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFLabel ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "Type"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFType ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "Controlled_Terminology"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasDFControlledTerm ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "Origin"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFOrigin ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "Role"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFRole ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "Comment"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasDFComment ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "generates a tabular display of define.xml content for VS"^^xsd:string ;
    ] ;
  spin:query [
      rdf:type sp:Select ;
      sp:orderBy (
          [
            sp:varName "num"^^xsd:string ;
          ]
        ) ;
      sp:resultVariables (
          [
            sp:varName "Variable"^^xsd:string ;
          ]
          [
            sp:varName "Label"^^xsd:string ;
          ]
          [
            sp:varName "Type"^^xsd:string ;
          ]
          [
            sp:varName "Controlled_Terminology"^^xsd:string ;
          ]
          [
            sp:varName "Origin"^^xsd:string ;
          ]
          [
            sp:varName "Role"^^xsd:string ;
          ]
          [
            sp:varName "Comment"^^xsd:string ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMDefineRecord_SUPPDM ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "var"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFVariable ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "num"^^xsd:string ;
              ] ;
            sp:predicate mms:ordinal ;
            sp:subject [
                sp:varName "var"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "Variable"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFVariableName ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "Label"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFLabel ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "Type"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFType ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "Origin"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFOrigin ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "Role"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFRole ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "Controlled_Terminology"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasDFControlledTerm ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "Comment"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasDFComment ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "generates a tabular display of define.xml content for SUPPDM"^^xsd:string ;
    ] ;
  rdfs:label "SDTMDefine domain"^^xsd:string ;
  rdfs:subClassOf sdtm:DefineComponent ;
.
sdtm:SDTMDefineRecord
  rdf:type owl:Class ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "ORIGIN"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFOrigin ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMDefineRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "method"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFMethod ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "location"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasDFLocation ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:concat ;
                sp:arg1 " / " ;
                sp:arg2 [
                    sp:varName "location"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "location2"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:concat ;
                sp:arg1 [
                    sp:varName "method"^^xsd:string ;
                  ] ;
                sp:arg2 [
                    sp:varName "location2"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "origin2"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:not ;
                    sp:arg1 [
                        rdf:type sp:bound ;
                        sp:arg1 [
                            sp:varName "location"^^xsd:string ;
                          ] ;
                      ] ;
                  ] ;
                sp:arg2 [
                    sp:varName "method"^^xsd:string ;
                  ] ;
                sp:arg3 [
                    sp:varName "origin2"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "ORIGIN"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "Constructs ORIGIN column as concatenation of Method and Location"^^xsd:string ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "method"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFMethod ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "location"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFLocation ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMDefineRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "var"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFVariable ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "am"^^xsd:string ;
              ] ;
            sp:predicate sdtm:additionalMetadata ;
            sp:subject [
                sp:varName "var"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "met"^^xsd:string ;
              ] ;
            sp:predicate code:hasMethod ;
            sp:subject [
                sp:varName "am"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "method"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "met"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "loc"^^xsd:string ;
                    ] ;
                  sp:predicate study:crfLocation ;
                  sp:subject [
                      sp:varName "am"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "location"^^xsd:string ;
                    ] ;
                  sp:predicate skos:prefLabel ;
                  sp:subject [
                      sp:varName "loc"^^xsd:string ;
                    ] ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "Method and Location search"^^xsd:string ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "varname"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFVariableName ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "varlabel"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFLabel ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vartype"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFType ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "varrole"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFRole ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "ctrlterm"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFControlledTerm ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "var"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDFVariable ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "varname"^^xsd:string ;
              ] ;
            sp:predicate mms:dataElementName ;
            sp:subject [
                sp:varName "var"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "varlabel"^^xsd:string ;
              ] ;
            sp:predicate mms:dataElementLabel ;
            sp:subject [
                sp:varName "var"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "vartype"^^xsd:string ;
              ] ;
            sp:predicate mms:dataElementType ;
            sp:subject [
                sp:varName "var"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "rl"^^xsd:string ;
              ] ;
            sp:predicate cdiscs:dataElementRole ;
            sp:subject [
                sp:varName "var"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "varrole"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "rl"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "ct"^^xsd:string ;
                    ] ;
                  sp:predicate cdiscs:controlledTermsOrFormat ;
                  sp:subject [
                      sp:varName "var"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "ctrm"^^xsd:string ;
                    ] ;
                  sp:predicate skos:prefLabel ;
                  sp:subject [
                      sp:varName "ct"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "armctrm"^^xsd:string ;
                    ] ;
                  sp:predicate skos:prefLabel ;
                  sp:subject study:Arm ;
                ]
                [
                  sp:object [
                      sp:varName "armcdctrm"^^xsd:string ;
                    ] ;
                  sp:predicate skos:altLabel ;
                  sp:subject study:Arm ;
                ]
                [
                  rdf:type sp:Bind ;
                  sp:expression [
                      rdf:type sp:if ;
                      sp:arg1 [
                          rdf:type sp:or ;
                          sp:arg1 [
                              rdf:type sp:eq ;
                              sp:arg1 [
                                  sp:varName "var"^^xsd:string ;
                                ] ;
                              sp:arg2 <http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.ARM> ;
                            ] ;
                          sp:arg2 [
                              rdf:type sp:eq ;
                              sp:arg1 [
                                  sp:varName "var"^^xsd:string ;
                                ] ;
                              sp:arg2 <http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.ACTARM> ;
                            ] ;
                        ] ;
                      sp:arg2 [
                          sp:varName "armctrm"^^xsd:string ;
                        ] ;
                      sp:arg3 [
                          rdf:type sp:if ;
                          sp:arg1 [
                              rdf:type sp:or ;
                              sp:arg1 [
                                  rdf:type sp:eq ;
                                  sp:arg1 [
                                      sp:varName "var"^^xsd:string ;
                                    ] ;
                                  sp:arg2 <http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.ARMCD> ;
                                ] ;
                              sp:arg2 [
                                  rdf:type sp:eq ;
                                  sp:arg1 [
                                      sp:varName "var"^^xsd:string ;
                                    ] ;
                                  sp:arg2 <http://rdf.cdisc.org/std/sdtmig-3-1-3#Column.DM.ACTARMCD> ;
                                ] ;
                            ] ;
                          sp:arg2 [
                              sp:varName "armcdctrm"^^xsd:string ;
                            ] ;
                          sp:arg3 [
                              sp:varName "ctrm"^^xsd:string ;
                            ] ;
                        ] ;
                    ] ;
                  sp:variable [
                      sp:varName "ctrlterm"^^xsd:string ;
                    ] ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "constructs Variable, Label, Type, Role, Controlled Terms columns"^^xsd:string ;
    ] ;
  rdfs:subClassOf sdtm:DefineComponent ;
  skos:altLabel ""^^xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "SDTMDefine record"^^xsd:string ;
.
sdtm:SDTMDefineRecord_DM
  rdf:type owl:Class ;
  rdfs:subClassOf sdtm:SDTMDefineRecord ;
  skos:altLabel ""^^xsd:string ;
  skos:prefLabel "SDTMDefine record DM"^^xsd:string ;
.
sdtm:SDTMDefineRecord_SUPPDM
  rdf:type owl:Class ;
  rdfs:subClassOf sdtm:SDTMDefineRecord ;
  skos:altLabel ""^^xsd:string ;
  skos:prefLabel "SDTMDefine record SUPPDM"^^xsd:string ;
.
sdtm:SDTMDefineRecord_VS
  rdf:type owl:Class ;
  rdfs:subClassOf sdtm:SDTMDefineRecord ;
  skos:altLabel ""^^xsd:string ;
  skos:prefLabel "SDTMDefine record VS"^^xsd:string ;
.
sdtm:SDTMDomain
  rdf:type owl:Class ;
  spin:query [
      rdf:type sp:Select ;
      sp:orderBy (
          [
            rdf:type sp:Asc ;
            sp:expression [
                sp:varName "USUBJID"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:resultVariables (
          [
            sp:varName "STUDYID"^^xsd:string ;
          ]
          [
            sp:varName "DOMAIN"^^xsd:string ;
          ]
          [
            sp:varName "USUBJID"^^xsd:string ;
          ]
          [
            sp:varName "SUBJID"^^xsd:string ;
          ]
          [
            sp:varName "RFSTDTC"^^xsd:string ;
          ]
          [
            sp:varName "RFENDTC"^^xsd:string ;
          ]
          [
            sp:varName "RFXSTDTC"^^xsd:string ;
          ]
          [
            sp:varName "RFXENDTC"^^xsd:string ;
          ]
          [
            sp:varName "RFICDTC"^^xsd:string ;
          ]
          [
            sp:varName "RFPENDTC"^^xsd:string ;
          ]
          [
            sp:varName "BRTHDTC"^^xsd:string ;
          ]
          [
            sp:varName "DTHDTC"^^xsd:string ;
          ]
          [
            sp:varName "DTHFL"^^xsd:string ;
          ]
          [
            sp:varName "SITEID"^^xsd:string ;
          ]
          [
            sp:varName "INVNAM"^^xsd:string ;
          ]
          [
            sp:varName "INVID"^^xsd:string ;
          ]
          [
            sp:varName "AGE"^^xsd:string ;
          ]
          [
            sp:varName "AGEU"^^xsd:string ;
          ]
          [
            sp:varName "SEX"^^xsd:string ;
          ]
          [
            sp:varName "RACE"^^xsd:string ;
          ]
          [
            sp:varName "ETHNIC"^^xsd:string ;
          ]
          [
            sp:varName "ARMCD"^^xsd:string ;
          ]
          [
            sp:varName "ARM"^^xsd:string ;
          ]
          [
            sp:varName "ACTARMCD"^^xsd:string ;
          ]
          [
            sp:varName "ACTARM"^^xsd:string ;
          ]
          [
            sp:varName "COUNTRY"^^xsd:string ;
          ]
          [
            sp:varName "DMDTC"^^xsd:string ;
          ]
          [
            sp:varName "DMDY"^^xsd:string ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTM_DM_Record ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "STUDYID"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasSTUDYID ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "DOMAIN"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDOMAIN ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "USUBJID"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasUSUBJID ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "SUBJID"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasSUBJID ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "RFSTDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasRFSTDTC ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "RFENDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasRFENDTC ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "RFXSTDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasRFXSTDTC ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "RFXENDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasRFXENDTC ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "RFICDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasRFICDTC ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "RFPENDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasRFPENDTC ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "BRTHDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasBRTHDTC ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "DTHDTC"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasDTHDTC ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "DTHFL"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasDTHFL ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "SITEID"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasSITEID ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "INVNAM"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasINVNAM ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "INVID"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasINVID ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "AGE"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasAGE ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "AGEU"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasAGEU ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "SEX"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasSEX ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "RACE"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasRACE ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "ETHNIC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasETHNIC ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "ARMCD"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasARMCD ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "ARM"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasARM ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "ACTARMCD"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasACTARMCD ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "ACTARM"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasACTARM ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "COUNTRY"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasCOUNTRY ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "DMDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDMDTC ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "DMDY"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDMDY ;
            sp:subject spin:_this ;
          ]
        ) ;
      rdfs:comment "DM domain query"^^xsd:string ;
    ] ;
  spin:query [
      rdf:type sp:Select ;
      sp:orderBy (
          [
            rdf:type sp:Asc ;
            sp:expression [
                sp:varName "USUBJID"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:resultVariables (
          [
            sp:varName "STUDYID"^^xsd:string ;
          ]
          [
            sp:varName "RDOMAIN"^^xsd:string ;
          ]
          [
            sp:varName "USUBJID"^^xsd:string ;
          ]
          [
            sp:varName "IDVAR"^^xsd:string ;
          ]
          [
            sp:varName "IDVARVAL"^^xsd:string ;
          ]
          [
            sp:varName "QNAM"^^xsd:string ;
          ]
          [
            sp:varName "QLABEL"^^xsd:string ;
          ]
          [
            sp:varName "QVAL"^^xsd:string ;
          ]
          [
            sp:varName "QORIG"^^xsd:string ;
          ]
          [
            sp:varName "QEVAL"^^xsd:string ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTM_SUPPDM_Record ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "suppact"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "person"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "STUDYID"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasSTUDYID ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "USUBJID"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasUSUBJID ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "RDOMAIN"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasRDOMAIN ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "IDVAR"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasIDVAR ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "IDVARVAL"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasIDVARVAL ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "QNAM"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasQNAM ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "QLABEL"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasQLABEL ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "QVAL"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasQVAL ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "QORIG"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasQORIG ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "QEVAL"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasQEVAL ;
            sp:subject spin:_this ;
          ]
        ) ;
      rdfs:comment "SUPPDM domain query"^^xsd:string ;
    ] ;
  spin:query [
      rdf:type sp:Select ;
      sp:orderBy (
          [
            rdf:type sp:Asc ;
            sp:expression [
                sp:varName "USUBJID"^^xsd:string ;
              ] ;
          ]
          [
            sp:varName "VSSEQ"^^xsd:string ;
          ]
        ) ;
      sp:resultVariables (
          [
            sp:varName "STUDYID"^^xsd:string ;
          ]
          [
            sp:varName "DOMAIN"^^xsd:string ;
          ]
          [
            sp:varName "USUBJID"^^xsd:string ;
          ]
          [
            sp:varName "VSSEQ"^^xsd:string ;
          ]
          [
            sp:varName "VSGRPID"^^xsd:string ;
          ]
          [
            sp:varName "VSSPID"^^xsd:string ;
          ]
          [
            sp:varName "VSTESTCD"^^xsd:string ;
          ]
          [
            sp:varName "VSTEST"^^xsd:string ;
          ]
          [
            sp:varName "VSCAT"^^xsd:string ;
          ]
          [
            sp:varName "VSSCAT"^^xsd:string ;
          ]
          [
            sp:varName "VSPOS"^^xsd:string ;
          ]
          [
            sp:varName "VSORRES"^^xsd:string ;
          ]
          [
            sp:varName "VSORRESU"^^xsd:string ;
          ]
          [
            sp:varName "VSSTRESC"^^xsd:string ;
          ]
          [
            sp:varName "VSSTRESN"^^xsd:string ;
          ]
          [
            sp:varName "VSSTRESU"^^xsd:string ;
          ]
          [
            sp:varName "VSSTAT"^^xsd:string ;
          ]
          [
            sp:varName "VSRSND"^^xsd:string ;
          ]
          [
            sp:varName "VSLOC"^^xsd:string ;
          ]
          [
            sp:varName "VSBLFL"^^xsd:string ;
          ]
          [
            sp:varName "VISITNUM"^^xsd:string ;
          ]
          [
            sp:varName "VISIT"^^xsd:string ;
          ]
          [
            sp:varName "VISITDY"^^xsd:string ;
          ]
          [
            sp:varName "VSTPT"^^xsd:string ;
          ]
          [
            sp:varName "VSTPTNUM"^^xsd:string ;
          ]
          [
            sp:varName "VSELTM"^^xsd:string ;
          ]
          [
            sp:varName "VSTPTREF"^^xsd:string ;
          ]
          [
            sp:varName "VSRFTDTC"^^xsd:string ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTM_VS_Record ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vsact"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "person"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "STUDYID"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasSTUDYID ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "USUBJID"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasUSUBJID ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "DOMAIN"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDOMAIN ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "VSSEQ"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSSEQ ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "VSGRPID"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSGRPID ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "VSSPID"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSSPID ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "VSTESTCD"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSTESTCD ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "VSTEST"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSTEST ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "VSCAT"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasVSCAT ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "VSSCAT"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasVSSCAT ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "VSPOS"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasVSPOS ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "VSORRES"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSORRES ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "VSORRESU"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasVSORRESU ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "VSSTRESC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSSTRESC ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "VSSTRESN"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSSTRESN ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "VSSTRESU"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasVSSTRESU ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "VSRSND"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasVSRSND ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "VSSTAT"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasVSSTAT ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "VSLOC"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasVSLOC ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "VSBLFL"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasVSBLFL ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "VISITNUM"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVISITNUM ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "VISIT"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVISIT ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "VISITDY"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVISITDY ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "VSTPT"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasVSTPT ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "VSTPTNUM"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasVSTPTNUM ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "VSELTM"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasVSELTM ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "VSTPTREF"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasVSTPTREF ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "VSRFTDTC"^^xsd:string ;
                    ] ;
                  sp:predicate sdtm:hasVSRFTDTC ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "VS Domain Query"^^xsd:string ;
    ] ;
  rdfs:comment ""^^xsd:string ;
  rdfs:subClassOf sdtm:SDTMComponent ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "SDTMDomain"^^xsd:string ;
.
sdtm:SDTMRecord
  rdf:type owl:Class ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "STUDYID"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasSTUDYID ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate study:hasStudyParticipant ;
            sp:subject [
                sp:varName "study"^^xsd:string ;
              ] ;
          ]
          [
            sp:object study:Study ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "study"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "stuid"^^xsd:string ;
              ] ;
            sp:predicate study:hasStudyID ;
            sp:subject [
                sp:varName "study"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "STUDYID"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "stuid"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  rdfs:comment ""^^xsd:string ;
  rdfs:subClassOf sdtm:SDTMComponent ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "SDTMRecord"^^xsd:string ;
.
sdtm:SDTMSubjectLevelRecord
  rdf:type owl:Class ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "SUBJID"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasSUBJID ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "USUBJID"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasUSUBJID ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "sid"^^xsd:string ;
              ] ;
            sp:predicate study:hasSubjectID ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "SUBJID"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "sid"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "usid"^^xsd:string ;
              ] ;
            sp:predicate study:hasUniqueSubjectID ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "USUBJID"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "usid"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  rdfs:comment ""^^xsd:string ;
  rdfs:subClassOf sdtm:SDTMRecord ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "SDTMSubject level record"^^xsd:string ;
.
sdtm:SDTMTerminology
  rdf:type owl:Class ;
  rdfs:comment ""^^xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "SDTMTerminology"^^xsd:string ;
.
sdtm:SDTM_DM_Record
  rdf:type owl:Class ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "ACTARM"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasACTARM ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "actualarm"^^xsd:string ;
              ] ;
            sp:predicate study:actualArm ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "ACTARM"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "actualarm"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "ACTARMCD"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasACTARMCD ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "actualarm"^^xsd:string ;
              ] ;
            sp:predicate study:actualArm ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "ACTARMCD"^^xsd:string ;
              ] ;
            sp:predicate skos:altLabel ;
            sp:subject [
                sp:varName "actualarm"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "AGE"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasAGE ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "AGEU"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasAGEU ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "demogcoll"^^xsd:string ;
              ] ;
            sp:predicate study:participatesIn ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "ageoutcome"^^xsd:string ;
              ] ;
            sp:predicate code:hasAge ;
            sp:subject [
                sp:varName "demogcoll"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "AGE"^^xsd:string ;
              ] ;
            sp:predicate code:hasValue ;
            sp:subject [
                sp:varName "ageoutcome"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "ageunit"^^xsd:string ;
              ] ;
            sp:predicate code:hasUnit ;
            sp:subject [
                sp:varName "ageoutcome"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "AGEU"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "ageunit"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "ARM"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasARM ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "ARMCD"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasARMCD ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "rndmact"^^xsd:string ;
              ] ;
            sp:predicate study:participatesIn ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object study:Randomization ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "rndmact"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "plannedarm"^^xsd:string ;
              ] ;
            sp:predicate study:outcome ;
            sp:subject [
                sp:varName "rndmact"^^xsd:string ;
              ] ;
          ]
          [
            sp:object study:RandomizationOutcome ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "plannedarm"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "ARM"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "plannedarm"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "ARMCD"^^xsd:string ;
              ] ;
            sp:predicate skos:altLabel ;
            sp:subject [
                sp:varName "plannedarm"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "BRTHDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasBRTHDTC ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "DTHDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDTHDTC ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "lfspn"^^xsd:string ;
              ] ;
            sp:predicate study:hasLifespan ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "brthd"^^xsd:string ;
              ] ;
            sp:predicate <http://www.w3.org/2006/time#hasBeginning> ;
            sp:subject [
                sp:varName "lfspn"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "BRTHDTC"^^xsd:string ;
              ] ;
            sp:predicate study:dateTimeInXSDString ;
            sp:subject [
                sp:varName "brthd"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "dthdate"^^xsd:string ;
                    ] ;
                  sp:predicate <http://www.w3.org/2006/time#hasEnd> ;
                  sp:subject [
                      sp:varName "lfspn"^^xsd:string ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "DTHDTC"^^xsd:string ;
                    ] ;
                  sp:predicate study:dateTimeInXSDString ;
                  sp:subject [
                      sp:varName "dthdate"^^xsd:string ;
                    ] ;
                ]
              ) ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "COUNTRY"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasCOUNTRY ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "site"^^xsd:string ;
              ] ;
            sp:predicate study:hasSite ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "ctry"^^xsd:string ;
              ] ;
            sp:predicate study:hasCountry ;
            sp:subject [
                sp:varName "site"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "COUNTRY"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "ctry"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "DTHFL"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDTHFL ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "DTHFL"^^xsd:string ;
              ] ;
            sp:predicate study:deathFlag ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "ETHNIC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasETHNIC ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "RACE"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasRACE ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "SEX"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasSEX ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "demogcoll"^^xsd:string ;
              ] ;
            sp:predicate study:participatesIn ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object code:DemographicDataCollection ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "demogcoll"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "ethn"^^xsd:string ;
              ] ;
            sp:predicate study:ethnicity ;
            sp:subject [
                sp:varName "demogcoll"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "ETHNIC"^^xsd:string ;
              ] ;
            sp:predicate <http://rdf.cdisc.org/ct/schema#cdiscSubmissionValue> ;
            sp:subject [
                sp:varName "ethn"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "race"^^xsd:string ;
              ] ;
            sp:predicate study:race ;
            sp:subject [
                sp:varName "demogcoll"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "RACE"^^xsd:string ;
              ] ;
            sp:predicate <http://rdf.cdisc.org/ct/schema#cdiscSubmissionValue> ;
            sp:subject [
                sp:varName "race"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "sex"^^xsd:string ;
              ] ;
            sp:predicate study:sex ;
            sp:subject [
                sp:varName "demogcoll"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "SEX"^^xsd:string ;
              ] ;
            sp:predicate <http://rdf.cdisc.org/ct/schema#cdiscSubmissionValue> ;
            sp:subject [
                sp:varName "sex"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "INVID"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasINVID ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "site"^^xsd:string ;
              ] ;
            sp:predicate study:hasSite ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "inv"^^xsd:string ;
              ] ;
            sp:predicate study:hasInvestigator ;
            sp:subject [
                sp:varName "site"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "iid"^^xsd:string ;
              ] ;
            sp:predicate study:hasInvestigatorID ;
            sp:subject [
                sp:varName "inv"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "INVID"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "iid"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "INVNAM"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasINVNAM ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "site"^^xsd:string ;
              ] ;
            sp:predicate study:hasSite ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "inv"^^xsd:string ;
              ] ;
            sp:predicate study:hasInvestigator ;
            sp:subject [
                sp:varName "site"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "INVNAM"^^xsd:string ;
              ] ;
            sp:predicate study:hasLastName ;
            sp:subject [
                sp:varName "inv"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "RFICDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasRFICDTC ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "informedconsent"^^xsd:string ;
              ] ;
            sp:predicate study:participatesIn ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object code:InformedConsentOutcome_1 ;
            sp:predicate study:outcome ;
            sp:subject [
                sp:varName "informedconsent"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "icinterval"^^xsd:string ;
              ] ;
            sp:predicate study:hasActivityInterval ;
            sp:subject [
                sp:varName "informedconsent"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "icbegin"^^xsd:string ;
              ] ;
            sp:predicate <http://www.w3.org/2006/time#hasBeginning> ;
            sp:subject [
                sp:varName "icinterval"^^xsd:string ;
              ] ;
          ]
          [
            sp:object study:InformedConsentBegin ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "icbegin"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "RFICDTC"^^xsd:string ;
              ] ;
            sp:predicate study:dateTimeInXSDString ;
            sp:subject [
                sp:varName "icbegin"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "RFPENDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasRFPENDTC ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "spi"^^xsd:string ;
              ] ;
            sp:predicate study:hasStudyParticipationInterval ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "rfpend"^^xsd:string ;
              ] ;
            sp:predicate <http://www.w3.org/2006/time#hasEnd> ;
            sp:subject [
                sp:varName "spi"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "RFPENDTC"^^xsd:string ;
              ] ;
            sp:predicate study:dateTimeInXSDString ;
            sp:subject [
                sp:varName "rfpend"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "RFSTDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasRFSTDTC ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "RFENDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasRFENDTC ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "DMDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDMDTC ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "DMDY"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasDMDY ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "refintrvl"^^xsd:string ;
              ] ;
            sp:predicate study:hasReferenceInterval ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "refstrt"^^xsd:string ;
              ] ;
            sp:predicate <http://www.w3.org/2006/time#hasBeginning> ;
            sp:subject [
                sp:varName "refintrvl"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "RFSTDTC"^^xsd:string ;
              ] ;
            sp:predicate study:dateTimeInXSDString ;
            sp:subject [
                sp:varName "refstrt"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "refend"^^xsd:string ;
              ] ;
            sp:predicate <http://www.w3.org/2006/time#hasEnd> ;
            sp:subject [
                sp:varName "refintrvl"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "RFENDTC"^^xsd:string ;
              ] ;
            sp:predicate study:dateTimeInXSDString ;
            sp:subject [
                sp:varName "refend"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "dmdatacoll"^^xsd:string ;
              ] ;
            sp:predicate study:participatesIn ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object code:DemographicDataCollection ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "dmdatacoll"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "dmdatacolldate"^^xsd:string ;
              ] ;
            sp:predicate study:hasDate ;
            sp:subject [
                sp:varName "dmdatacoll"^^xsd:string ;
              ] ;
          ]
          [
            sp:object study:DemogDataCollectionDate ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "dmdatacolldate"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "DMDTC"^^xsd:string ;
              ] ;
            sp:predicate study:dateTimeInXSDString ;
            sp:subject [
                sp:varName "dmdatacolldate"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type study:studyday ;
                arg:activityDate [
                    sp:varName "DMDTC"^^xsd:string ;
                  ] ;
                arg:refDate [
                    sp:varName "RFSTDTC"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "DMDY"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "RFXSTDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasRFXSTDTC ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "RFXENDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasRFXENDTC ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "padmin"^^xsd:string ;
              ] ;
            sp:predicate study:participatesIn ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object study:CumulativeProductAdministration ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "padmin"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "paintrvl"^^xsd:string ;
              ] ;
            sp:predicate study:hasActivityInterval ;
            sp:subject [
                sp:varName "padmin"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "padminstart"^^xsd:string ;
              ] ;
            sp:predicate <http://www.w3.org/2006/time#hasBeginning> ;
            sp:subject [
                sp:varName "paintrvl"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "RFXSTDTC"^^xsd:string ;
              ] ;
            sp:predicate study:dateTimeInXSDString ;
            sp:subject [
                sp:varName "padminstart"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "padminend"^^xsd:string ;
              ] ;
            sp:predicate <http://www.w3.org/2006/time#hasEnd> ;
            sp:subject [
                sp:varName "paintrvl"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "RFXENDTC"^^xsd:string ;
              ] ;
            sp:predicate study:dateTimeInXSDString ;
            sp:subject [
                sp:varName "padminend"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "SITEID"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasSITEID ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "site"^^xsd:string ;
              ] ;
            sp:predicate study:hasSite ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "stid"^^xsd:string ;
              ] ;
            sp:predicate study:hasSiteID ;
            sp:subject [
                sp:varName "site"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "SITEID"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "stid"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  rdfs:comment ""^^xsd:string ;
  rdfs:subClassOf sdtm:SDTMSubjectLevelRecord ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "DM"^^xsd:string ;
      owl:onProperty sdtm:hasDOMAIN ;
    ] ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "SDTM DM Record"^^xsd:string ;
.
sdtm:SDTM_SUPPDM_Record
  rdf:type owl:Class ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "QNAM"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasQNAM ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "QLABEL"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasQLABEL ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "QVAL"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasQVAL ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "QORIG"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasQORIG ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "QEVAL"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasQEVAL ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "subj"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "activity"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "cde"^^xsd:string ;
              ] ;
            sp:predicate study:hasCode ;
            sp:subject [
                sp:varName "activity"^^xsd:string ;
              ] ;
          ]
          [
            sp:object study:PopulationFlag ;
            sp:predicate rdfs:subClassOf ;
            sp:subject [
                sp:varName "cde"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "QNAM"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "cde"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "QLABEL"^^xsd:string ;
              ] ;
            sp:predicate skos:altLabel ;
            sp:subject [
                sp:varName "cde"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "qvalbin"^^xsd:string ;
              ] ;
            sp:predicate study:outcome ;
            sp:subject [
                sp:varName "activity"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    sp:varName "qvalbin"^^xsd:string ;
                  ] ;
                sp:arg2 "Y" ;
                sp:arg3 " " ;
              ] ;
            sp:variable [
                sp:varName "QVAL"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "method"^^xsd:string ;
              ] ;
            sp:predicate code:hasMethod ;
            sp:subject [
                sp:varName "cde"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "QORIG"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "method"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "performer"^^xsd:string ;
              ] ;
            sp:predicate study:hasPerformer ;
            sp:subject [
                sp:varName "activity"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "QEVAL"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "performer"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "dcode"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasRDOMAIN ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "dcode"^^xsd:string ;
              ] ;
            sp:predicate cdiscs:datasetCode ;
            sp:subject <http://rdf.cdisc.org/std/sdtmig-3-1-3#Dataset.DM> ;
          ]
        ) ;
    ] ;
  rdfs:comment ""^^xsd:string ;
  rdfs:subClassOf sdtm:SDTM_SupplementalRecord ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "SDTM SUPPDM Record"^^xsd:string ;
.
sdtm:SDTM_SupplementalRecord
  rdf:type owl:Class ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "QEVAL"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasQEVAL ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTM_SupplementalRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "suppact"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "perf"^^xsd:string ;
              ] ;
            sp:predicate study:hasPerformer ;
            sp:subject [
                sp:varName "suppact"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "QEVAL"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "perf"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "Query for QEVAL"^^xsd:string ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "QNAM"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasQNAM ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "QLABEL"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasQLABEL ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTM_SupplementalRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "suppact"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "QNAM"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "suppact"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "QLABEL"^^xsd:string ;
              ] ;
            sp:predicate skos:altLabel ;
            sp:subject [
                sp:varName "suppact"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "Query for QNAM and QLABEL"^^xsd:string ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "QORIG"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasQORIG ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTM_SupplementalRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "suppact"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "method"^^xsd:string ;
              ] ;
            sp:predicate code:hasMethod ;
            sp:subject [
                sp:varName "suppact"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "QORIG"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "method"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "Query for QORIG"^^xsd:string ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "QVAL"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasQVAL ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTM_SupplementalRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "suppact"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "outcome"^^xsd:string ;
              ] ;
            sp:predicate study:outcome ;
            sp:subject [
                sp:varName "suppact"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:if ;
                sp:arg1 [
                    rdf:type sp:eq ;
                    sp:arg1 [
                        sp:varName "outcome"^^xsd:string ;
                      ] ;
                    sp:arg2 "true"^^xsd:boolean ;
                  ] ;
                sp:arg2 "Y" ;
                sp:arg3 "F" ;
              ] ;
            sp:variable [
                sp:varName "QVAL"^^xsd:string ;
              ] ;
          ]
        ) ;
      rdfs:comment "Query for QVAL"^^xsd:string ;
    ] ;
  rdfs:comment ""^^xsd:string ;
  rdfs:subClassOf sdtm:SDTMSubjectLevelRecord ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "SDTM Supplemental record"^^xsd:string ;
.
sdtm:SDTM_VS_Record
  rdf:type owl:Class ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VISIT"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVISIT ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate study:hasSubActivity ;
            sp:subject [
                sp:varName "vsvisit"^^xsd:string ;
              ] ;
          ]
          [
            sp:object study:Visit ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vsvisit"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VISIT"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "vsvisit"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VISITDY"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVISITDY ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "refintrvl"^^xsd:string ;
              ] ;
            sp:predicate study:hasReferenceInterval ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "refstrt"^^xsd:string ;
              ] ;
            sp:predicate <http://www.w3.org/2006/time#hasBeginning> ;
            sp:subject [
                sp:varName "refintrvl"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "RFSTDTC"^^xsd:string ;
              ] ;
            sp:predicate study:dateTimeInXSDString ;
            sp:subject [
                sp:varName "refstrt"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate study:hasSubActivity ;
            sp:subject [
                sp:varName "vsvisit"^^xsd:string ;
              ] ;
          ]
          [
            sp:object study:Visit ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vsvisit"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "vsvisitbgn"^^xsd:string ;
              ] ;
            sp:predicate study:hasDate ;
            sp:subject [
                sp:varName "vsvisit"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "vsb"^^xsd:string ;
              ] ;
            sp:predicate study:dateTimeInXSDString ;
            sp:subject [
                sp:varName "vsvisitbgn"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type study:studyday ;
                arg:activityDate [
                    sp:varName "vsb"^^xsd:string ;
                  ] ;
                arg:refDate [
                    sp:varName "RFSTDTC"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "VISITDY"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VISITNUM"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVISITNUM ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate study:hasSubActivity ;
            sp:subject [
                sp:varName "vsvisit"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VISITNUM"^^xsd:string ;
              ] ;
            sp:predicate study:seq ;
            sp:subject [
                sp:varName "vsvisit"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VSBLFL"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSBLFL ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object study:VitalSign ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vstest"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSBLFL"^^xsd:string ;
              ] ;
            sp:predicate study:baselineFlag ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VSCAT"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSCAT ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "VSSCAT"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSSCAT ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object study:VitalSign ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "vsctg"^^xsd:string ;
              ] ;
            sp:predicate study:hasCategory ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSCAT"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "vsctg"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "vssctg"^^xsd:string ;
              ] ;
            sp:predicate study:hasSubcategory ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSSCAT"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "vssctg"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VSDRVFL"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSDRVFL ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object study:VitalSign ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSDRVFL"^^xsd:string ;
              ] ;
            sp:predicate study:derivedFlag ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VSDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSDTC ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "VSDY"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSDY ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate study:hasSubActivity ;
            sp:subject [
                sp:varName "vsvisit"^^xsd:string ;
              ] ;
          ]
          [
            sp:object study:VitalSign ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "vststdt"^^xsd:string ;
              ] ;
            sp:predicate study:hasDate ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSDTC"^^xsd:string ;
              ] ;
            sp:predicate study:dateTimeInXSDString ;
            sp:subject [
                sp:varName "vststdt"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "refintrvl"^^xsd:string ;
              ] ;
            sp:predicate study:hasReferenceInterval ;
            sp:subject [
                sp:varName "subject"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "refstrt"^^xsd:string ;
              ] ;
            sp:predicate <http://www.w3.org/2006/time#hasBeginning> ;
            sp:subject [
                sp:varName "refintrvl"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "RFSTDTC"^^xsd:string ;
              ] ;
            sp:predicate study:dateTimeInXSDString ;
            sp:subject [
                sp:varName "refstrt"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type study:studyday ;
                arg:activityDate [
                    sp:varName "VSDTC"^^xsd:string ;
                  ] ;
                arg:refDate [
                    sp:varName "RFSTDTC"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "VSDY"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VSELTM"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSELTM ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "VSTPTREF"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSTPTREF ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "VSRFTDTC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSRFTDTC ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object study:VitalSign ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "strtrule"^^xsd:string ;
              ] ;
            sp:predicate study:hasStartRule ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSELTM"^^xsd:string ;
              ] ;
            sp:predicate study:hasDelay ;
            sp:subject [
                sp:varName "strtrule"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "anchr"^^xsd:string ;
              ] ;
            sp:predicate study:hasPrerequisite ;
            sp:subject [
                sp:varName "strtrule"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "anchroutcome"^^xsd:string ;
              ] ;
            sp:predicate study:outcome ;
            sp:subject [
                sp:varName "anchr"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSTPTREF"^^xsd:string ;
              ] ;
            sp:predicate skos:altLabel ;
            sp:subject [
                sp:varName "anchroutcome"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "actdate"^^xsd:string ;
              ] ;
            sp:predicate study:hasDate ;
            sp:subject [
                sp:varName "anchr"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSRFTDTC"^^xsd:string ;
              ] ;
            sp:predicate study:dateTimeInXSDString ;
            sp:subject [
                sp:varName "actdate"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VSGRPID"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSGRPID ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object study:VitalSign ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSGRPID"^^xsd:string ;
              ] ;
            sp:predicate study:groupID ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VSLAT"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSLAT ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object study:VitalSign ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "laterality"^^xsd:string ;
              ] ;
            sp:predicate study:laterality ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSLAT"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "laterality"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VSLOC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSLOC ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object study:VitalSign ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "anatloc"^^xsd:string ;
              ] ;
            sp:predicate study:anatomicLocation ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSLOC"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "anatloc"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VSORRES"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSORRES ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "VSORRESU"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSORRESU ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "VSSTRESN"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSSTRESN ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "VSSTRESU"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSSTRESU ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "VSSTRESC"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSSTRESC ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object study:VitalSign ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "vstestoutcome"^^xsd:string ;
              ] ;
            sp:predicate study:outcome ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSORRES"^^xsd:string ;
              ] ;
            sp:predicate code:hasValue ;
            sp:subject [
                sp:varName "vstestoutcome"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "orresu"^^xsd:string ;
              ] ;
            sp:predicate code:hasUnit ;
            sp:subject [
                sp:varName "vstestoutcome"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSORRESU"^^xsd:string ;
              ] ;
            sp:predicate rdfs:label ;
            sp:subject [
                sp:varName "orresu"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type code:unitConversion ;
                arg:origResult [
                    sp:varName "vstestoutcome"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "VSSTRESN"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type code:unitNormalized ;
                arg:origResult [
                    sp:varName "vstestoutcome"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "VSSTRESU"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type code:unitConversionChar ;
                arg:origResult [
                    sp:varName "vstestoutcome"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "VSSTRESC"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VSPOS"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSPOS ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object study:VitalSign ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "bodypos"^^xsd:string ;
              ] ;
            sp:predicate study:bodyPosition ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSPOS"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "bodypos"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VSREASND"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSRSND ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object study:VitalSign ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSREASND"^^xsd:string ;
              ] ;
            sp:predicate study:reasonNotDone ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VSSEQ"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSSEQ ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object study:VitalSign ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSSEQ"^^xsd:string ;
              ] ;
            sp:predicate study:seq ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VSSPID"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSSPID ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object study:VitalSign ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSSPID"^^xsd:string ;
              ] ;
            sp:predicate study:sponsordefinedID ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VSSTAT"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSSTAT ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object study:VitalSign ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "astatus"^^xsd:string ;
              ] ;
            sp:predicate study:activityStatus ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSSTAT"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "astatus"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VSTEST"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSTEST ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "VSTESTCD"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSTESTCD ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object study:VitalSign ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSTEST"^^xsd:string ;
              ] ;
            sp:predicate skos:altLabel ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "VSTESTCD"^^xsd:string ;
              ] ;
            sp:predicate skos:prefLabel ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "VSTPT"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSTPT ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "VSTPTNUM"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasVSTPTNUM ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sdtm:SDTMRecord ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "subject"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasEntity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object [
                sp:varName "vstst"^^xsd:string ;
              ] ;
            sp:predicate sdtm:hasActivity ;
            sp:subject spin:_this ;
          ]
          [
            sp:object study:VitalSign ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "strtrule"^^xsd:string ;
              ] ;
            sp:predicate study:hasStartRule ;
            sp:subject [
                sp:varName "vstst"^^xsd:string ;
              ] ;
          ]
          [
            sp:object study:StartRule ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "strtrule"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "VSTPT"^^xsd:string ;
                    ] ;
                  sp:predicate study:ruleDescription ;
                  sp:subject [
                      sp:varName "strtrule"^^xsd:string ;
                    ] ;
                ]
              ) ;
          ]
          [
            sp:object [
                sp:varName "VSTPTNUM"^^xsd:string ;
              ] ;
            sp:predicate skos:altLabel ;
            sp:subject [
                sp:varName "strtrule"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  rdfs:comment ""^^xsd:string ;
  rdfs:subClassOf sdtm:SDTMSubjectLevelRecord ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "VS"^^xsd:string ;
      owl:onProperty sdtm:hasDOMAIN ;
    ] ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "SDTM VS Record"^^xsd:string ;
.
sdtm:Variable
  rdf:type owl:Class ;
  rdfs:comment ""^^xsd:string ;
  rdfs:subClassOf sdtm:SDTMTerminology ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "Variable"^^xsd:string ;
.
sdtm:additionalMetadata
  rdf:type owl:ObjectProperty ;
  rdfs:domain sdtm:Variable ;
  rdfs:range owl:Thing ;
  skos:definition "links an SDTM variable with the resource in the study ontology that contains Method and Location information. This is different for each SDTM variable and may vary by protocol. "^^xsd:string ;
  skos:prefLabel "additional metadata"^^xsd:string ;
.
sdtm:hasACTARM
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "ACTARM"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "ACTARM"^^xsd:string ;
.
sdtm:hasACTARMCD
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "ACTARMCD"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "ACTARMCD"^^xsd:string ;
.
sdtm:hasAGE
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "AGE"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "AGE"^^xsd:string ;
.
sdtm:hasAGEU
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "AGEU"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "AGEU"^^xsd:string ;
.
sdtm:hasARM
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "ARM"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "ARM"^^xsd:string ;
.
sdtm:hasARMCD
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "ARMCD"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "ARMCD"^^xsd:string ;
.
sdtm:hasActivity
  rdf:type owl:ObjectProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTMRecord ;
  rdfs:label "has activity"^^xsd:string ;
  rdfs:range study:StudyActivity ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "has activity"^^xsd:string ;
.
sdtm:hasBRTHDTC
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "BRTHDTC	"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "BRTHDTC	"^^xsd:string ;
.
sdtm:hasCOUNTRY
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "COUNTRY"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "COUNTRY"^^xsd:string ;
.
sdtm:hasCode
  rdf:type owl:ObjectProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTMDomain ;
  rdfs:label "has code"^^xsd:string ;
  rdfs:range sdtm:Domain ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "has code"^^xsd:string ;
.
sdtm:hasDFComment
  rdf:type owl:DatatypeProperty ;
  rdfs:domain sdtm:SDTMDefineRecord ;
  rdfs:range xsd:string ;
  skos:altLabel ""^^xsd:string ;
  skos:prefLabel "Comment"^^xsd:string ;
.
sdtm:hasDFControlledTerm
  rdf:type owl:DatatypeProperty ;
  rdfs:domain sdtm:SDTMDefineRecord ;
  rdfs:range xsd:string ;
  skos:altLabel ""^^xsd:string ;
  skos:prefLabel "ControlledTerminology"^^xsd:string ;
.
sdtm:hasDFLabel
  rdf:type owl:DatatypeProperty ;
  rdfs:domain sdtm:SDTMDefineRecord ;
  rdfs:range xsd:string ;
  skos:altLabel ""^^xsd:string ;
  skos:prefLabel "Label"^^xsd:string ;
.
sdtm:hasDFLocation
  rdf:type owl:DatatypeProperty ;
  rdfs:domain sdtm:SDTMDefineRecord ;
  rdfs:range xsd:string ;
  skos:altLabel ""^^xsd:string ;
  skos:prefLabel "Origin"^^xsd:string ;
.
sdtm:hasDFMethod
  rdf:type owl:DatatypeProperty ;
  rdfs:domain sdtm:SDTMDefineRecord ;
  rdfs:range xsd:string ;
  skos:altLabel ""^^xsd:string ;
  skos:prefLabel "Method"^^xsd:string ;
.
sdtm:hasDFOrigin
  rdf:type owl:DatatypeProperty ;
  rdfs:domain sdtm:SDTMDefineRecord ;
  rdfs:range xsd:string ;
  skos:altLabel ""^^xsd:string ;
  skos:prefLabel "Origin"^^xsd:string ;
.
sdtm:hasDFRole
  rdf:type owl:DatatypeProperty ;
  rdfs:domain sdtm:SDTMDefineRecord ;
  rdfs:range xsd:string ;
  skos:altLabel ""^^xsd:string ;
  skos:prefLabel "Role"^^xsd:string ;
.
sdtm:hasDFType
  rdf:type owl:ObjectProperty ;
  rdfs:domain sdtm:SDTMDefineRecord ;
  skos:altLabel ""^^xsd:string ;
  skos:prefLabel "Type"^^xsd:string ;
.
sdtm:hasDFVariable
  rdf:type owl:ObjectProperty ;
  rdfs:domain sdtm:SDTMDefineRecord ;
  rdfs:range sdtm:Variable ;
  skos:altLabel ""^^xsd:string ;
  skos:prefLabel "Variable"^^xsd:string ;
.
sdtm:hasDFVariableName
  rdf:type owl:DatatypeProperty ;
  rdfs:domain sdtm:SDTMDefineRecord ;
  rdfs:range xsd:string ;
  skos:altLabel ""^^xsd:string ;
  skos:prefLabel "Variable"^^xsd:string ;
.
sdtm:hasDMDTC
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "DMDTC"^^xsd:string ;
  rdfs:range xsd:dateTime ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "DMDTC"^^xsd:string ;
.
sdtm:hasDMDY
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "Datatype property 1"^^xsd:string ;
  rdfs:range xsd:integer ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "Datatype property 1"^^xsd:string ;
.
sdtm:hasDOMAIN
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTMRecord ;
  rdfs:label "Domain Abbreviation"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "Domain Abbreviation"^^xsd:string ;
.
sdtm:hasDTHDTC
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "BRTHDTC	"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "BRTHDTC	"^^xsd:string ;
.
sdtm:hasDTHFL
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "DEATHFL"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "DEATHFL"^^xsd:string ;
.
sdtm:hasETHNIC
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "ETHNIC"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "ETHNIC"^^xsd:string ;
.
sdtm:hasEntity
  rdf:type owl:ObjectProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTMRecord ;
  rdfs:label "has entity"^^xsd:string ;
  rdfs:range study:HumanStudySubject ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "has entity"^^xsd:string ;
.
sdtm:hasIDVAR
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_SupplementalRecord ;
  rdfs:label "has IDVAR"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "has IDVAR"^^xsd:string ;
.
sdtm:hasIDVARVAL
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_SupplementalRecord ;
  rdfs:label "has IDVAR"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "has IDVAR"^^xsd:string ;
.
sdtm:hasINVID
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "INVID"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition "Relates SDTM record with the Investigator Identifier"^^xsd:string ;
  skos:prefLabel "INVID"^^xsd:string ;
.
sdtm:hasINVNAM
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "INVNAM"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition "related SDTM Record with the Investigator Name"^^xsd:string ;
  skos:prefLabel "INVNAM"^^xsd:string ;
.
sdtm:hasQEVAL
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_SupplementalRecord ;
  rdfs:label "has IDVAR"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "has IDVAR"^^xsd:string ;
.
sdtm:hasQLABEL
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_SupplementalRecord ;
  rdfs:label "has IDVAR"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "has IDVAR"^^xsd:string ;
.
sdtm:hasQNAM
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_SupplementalRecord ;
  rdfs:label "has IDVAR"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "has IDVAR"^^xsd:string ;
.
sdtm:hasQORIG
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_SupplementalRecord ;
  rdfs:label "has IDVAR"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "has IDVAR"^^xsd:string ;
.
sdtm:hasQVAL
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_SupplementalRecord ;
  rdfs:label "has IDVAR"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "has IDVAR"^^xsd:string ;
.
sdtm:hasRACE
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "RACE"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "RACE"^^xsd:string ;
.
sdtm:hasRDOMAIN
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_SupplementalRecord ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasRFENDTC
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "Subject Reference End Date/Time"^^xsd:string ;
  rdfs:range xsd:dateTime ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "Subject Reference End Date/Time"^^xsd:string ;
.
sdtm:hasRFICDTC
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "RFICDTC"^^xsd:string ;
  rdfs:range xsd:dateTime ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "RFICDTC"^^xsd:string ;
.
sdtm:hasRFPENDTC
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "RFPENDTC"^^xsd:string ;
  rdfs:range xsd:dateTime ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "RFPENDTC"^^xsd:string ;
.
sdtm:hasRFSTDTC
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "Subject Reference Start Date/Time"^^xsd:string ;
  rdfs:range xsd:dateTime ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "Subject Reference Start Date/Time"^^xsd:string ;
.
sdtm:hasRFXENDTC
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "RFXENDTC"^^xsd:string ;
  rdfs:range xsd:dateTime ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "RFXENDTC"^^xsd:string ;
.
sdtm:hasRFXSTDTC
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "RFSXTDTC"^^xsd:string ;
  rdfs:range xsd:dateTime ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "RFSXTDTC"^^xsd:string ;
.
sdtm:hasRecord
  rdf:type owl:ObjectProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTMDomain ;
  rdfs:label "has record"^^xsd:string ;
  rdfs:range sdtm:SDTMRecord ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "has record"^^xsd:string ;
.
sdtm:hasSEX
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "AGE"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "AGE"^^xsd:string ;
.
sdtm:hasSITEID
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_DM_Record ;
  rdfs:label "SITEID"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "SITEID"^^xsd:string ;
.
sdtm:hasSTUDYID
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTMRecord ;
  rdfs:label "Study Identifier"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "Study Identifier"^^xsd:string ;
.
sdtm:hasSUBJID
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTMRecord ;
  rdfs:label "Subject Identifier for the Study"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "Subject Identifier for the Study"^^xsd:string ;
.
sdtm:hasUSUBJID
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTMRecord ;
  rdfs:label "USUBJID"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "USUBJID"^^xsd:string ;
.
sdtm:hasVISIT
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTMSubjectLevelRecord ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVISITDY
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTMSubjectLevelRecord ;
  rdfs:range xsd:float ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVISITNUM
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTMSubjectLevelRecord ;
  rdfs:range xsd:float ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSBLFL
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:label "VSBLFL"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "VSBLFL"^^xsd:string ;
.
sdtm:hasVSCAT
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:label "VSCAT"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "VSCAT"^^xsd:string ;
.
sdtm:hasVSDRVFL
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:label "VSBLFL"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "VSBLFL"^^xsd:string ;
.
sdtm:hasVSDTC
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:dateTime ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSDY
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTMSubjectLevelRecord ;
  rdfs:range xsd:float ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSELTM
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSGRPID
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSLAT
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSLOC
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSORRES
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:float ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSORRESU
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSPOS
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSRFTDTC
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSRSND
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSSCAT
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:string ;
  skos:definition "VSSCAT"^^xsd:string ;
.
sdtm:hasVSSEQ
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:label "VSBLFL"^^xsd:string ;
  rdfs:range xsd:float ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "VSBLFL"^^xsd:string ;
.
sdtm:hasVSSPID
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:integer ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSSTAT
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSSTRESC
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSSTRESN
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:float ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSSTRESU
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:float ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSTEST
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:label "VSTEST"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
  skos:prefLabel "VSTEST"^^xsd:string ;
.
sdtm:hasVSTESTCD
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSTPT
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSTPTNUM
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:integer ;
  skos:definition ""^^xsd:string ;
.
sdtm:hasVSTPTREF
  rdf:type owl:DatatypeProperty ;
  rdfs:comment ""^^xsd:string ;
  rdfs:domain sdtm:SDTM_VS_Record ;
  rdfs:range xsd:string ;
  skos:definition ""^^xsd:string ;
.
sdtm:key
  rdf:type owl:DatatypeProperty ;
  rdfs:domain sdtm:SDTMDefineRecord ;
  rdfs:range xsd:integer ;
  skos:definition "Define.xml 2.0 record sort order"^^xsd:string ;
  skos:prefLabel "key"^^xsd:string ;
.
sdtm:variableComment
  rdf:type owl:AnnotationProperty ;
  rdfs:domain sdtm:Variable ;
  rdfs:range xsd:string ;
  rdfs:subPropertyOf skos:note ;
  skos:prefLabel "variable comment"^^xsd:string ;
.
